openapi: 3.0.3
info:
  title: Wixplore Cultural Data Intelligence API
  description: |
    ## Overview
    Wixplore is a modern cultural data intelligence platform that combines Vue 3 frontend with Node.js serverless functions and Python AI agents for advanced data analysis.
    
    ## Features
    - **File Upload & Processing**: Upload CSV, JSON, XLSX, and TXT files
    - **AI-Powered Analysis**: 4 specialized Python agents for data processing
    - **Cultural Intelligence**: Language detection and cultural context extraction
    - **Real-time Processing**: Serverless architecture with instant results
    
    ## Base URL
    - **Development**: `http://localhost:5000`
    - **Production**: `https://your-vercel-app.vercel.app`
    
    ## Authentication
    Currently no authentication required for development. Production deployment may require API keys.
    
    ## Rate Limits
    - File uploads: 10MB max size
    - Agent processing: 1 request per second recommended
    
    ## Support
    - GitHub: [Repository Link]
    - Documentation: See README.md
    - Issues: Create GitHub issue for support
    
  version: 1.0.0
  contact:
    name: Wixplore Team
    email: support@wixplore.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://your-vercel-app.vercel.app
    description: Production server

tags:
  - name: Health
    description: API health and status endpoints
  - name: File Upload
    description: File upload and management operations
  - name: AI Agents
    description: Python AI agents for data processing
  - name: Data Processing
    description: Advanced data analysis and insights

paths:
  /api/health:
    get:
      tags:
        - Health
      summary: API Health Check
      description: Check if the API is running and responsive
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "API is running"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-08-14T06:31:05.344Z"
              examples:
                success:
                  summary: Successful health check
                  value:
                    status: "API is running"
                    timestamp: "2025-08-14T06:31:05.344Z"

  /api/upload:
    post:
      tags:
        - File Upload
      summary: Upload Dataset File
      description: |
        Upload a dataset file for processing by AI agents.
        
        **Supported formats:**
        - CSV (.csv)
        - JSON (.json)
        - Excel (.xlsx, .xls)
        - Text (.txt)
        
        **Size limit:** 10MB
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                dataset:
                  type: string
                  format: binary
                  description: The dataset file to upload
              required:
                - dataset
            examples:
              csv_upload:
                summary: CSV file upload
                value:
                  dataset: "sample_data.csv"
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "uploaded"
                  file:
                    type: object
                    properties:
                      filename:
                        type: string
                        example: "dataset-1755153096115-559268724.csv"
                      originalName:
                        type: string
                        example: "test_data.csv"
                      size:
                        type: integer
                        example: 138
                      path:
                        type: string
                        example: "/data/dataset-1755153096115-559268724.csv"
                      mimetype:
                        type: string
                        example: "text/csv"
                  message:
                    type: string
                    example: "File uploaded successfully"
        '400':
          description: Bad request - invalid file or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error during upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/upload/files:
    get:
      tags:
        - File Upload
      summary: List Uploaded Files
      description: Get a list of all uploaded files with metadata
      responses:
        '200':
          description: List of uploaded files
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                          example: "dataset-1755153096115-559268724.csv"
                        size:
                          type: integer
                          example: 138
                        uploadDate:
                          type: string
                          format: date-time
                          example: "2025-08-14T06:30:00.000Z"
        '500':
          description: Error listing files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/upload/files/{filename}:
    delete:
      tags:
        - File Upload
      summary: Delete Uploaded File
      description: Delete a specific uploaded file from the server
      parameters:
        - name: filename
          in: path
          required: true
          description: The name of the file to delete
          schema:
            type: string
            example: "dataset-1755153096115-559268724.csv"
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "File deleted successfully"
        '500':
          description: Error deleting file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/agents/list:
    get:
      tags:
        - AI Agents
      summary: Get Available AI Agents
      description: List all available AI agents with their capabilities
      responses:
        '200':
          description: List of available agents
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "cleaner"
                        name:
                          type: string
                          example: "Data Cleaner"
                        description:
                          type: string
                          example: "Cleans and preprocesses data files"
              examples:
                agents_list:
                  summary: All available agents
                  value:
                    agents:
                      - id: "cleaner"
                        name: "Data Cleaner"
                        description: "Cleans and preprocesses data files"
                      - id: "profiler"
                        name: "Data Profiler"
                        description: "Analyzes data structure and quality"
                      - id: "reasoner"
                        name: "Data Reasoner"
                        description: "Provides insights and reasoning about data"
                      - id: "langextract"
                        name: "Language Extractor"
                        description: "Extracts and analyzes language patterns"

  /api/agents/run:
    post:
      tags:
        - AI Agents
      summary: Execute AI Agent
      description: |
        Run a specific AI agent on an uploaded dataset file.
        
        **Available Agents:**
        - **cleaner**: Data cleaning and preprocessing
        - **profiler**: Comprehensive data quality analysis
        - **reasoner**: Intelligent insights and pattern detection
        - **langextract**: Language and text analysis
        
        **Processing Time:** 1-5 seconds depending on file size and agent complexity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: Name of the uploaded file to process
                  example: "dataset-1755153096115-559268724.csv"
                agentType:
                  type: string
                  enum: [cleaner, profiler, reasoner, langextract]
                  description: Type of agent to execute
                  example: "cleaner"
                parameters:
                  type: object
                  description: Optional agent-specific parameters
                  example: 
                    remove_duplicates: true
                    handle_missing: "drop"
              required:
                - filename
                - agentType
            examples:
              cleaner_request:
                summary: Data Cleaner Agent
                value:
                  filename: "dataset-1755153096115-559268724.csv"
                  agentType: "cleaner"
                  parameters:
                    remove_duplicates: true
                    handle_missing: "drop"
                    normalize_text: true
              profiler_request:
                summary: Data Profiler Agent
                value:
                  filename: "dataset-1755153096115-559268724.csv"
                  agentType: "profiler"
                  parameters:
                    include_correlations: true
                    include_distributions: true
              reasoner_request:
                summary: Data Reasoner Agent
                value:
                  filename: "dataset-1755153096115-559268724.csv"
                  agentType: "reasoner"
                  parameters:
                    include_patterns: true
                    include_anomalies: true
              langextract_request:
                summary: Language Extractor Agent
                value:
                  filename: "dataset-1755153267691-746636636.csv"
                  agentType: "langextract"
                  parameters:
                    detect_languages: true
                    extract_keywords: true
                    max_keywords: 50
      responses:
        '200':
          description: Agent executed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  agent:
                    type: string
                    example: "cleaner"
                  result:
                    type: object
                    description: Agent-specific results
              examples:
                cleaner_success:
                  summary: Data Cleaner Success
                  value:
                    status: "success"
                    agent: "cleaner"
                    result:
                      status: "success"
                      original_shape: [5, 4]
                      cleaned_shape: [5, 4]
                      rows_removed: 0
                      missing_values_original: 0
                      missing_values_cleaned: 0
                      output_file: "/data/cleaned_dataset-1755153096115-559268724.csv"
                      data_types:
                        name: "object"
                        age: "int64"
                        country: "object"
                        language: "object"
                profiler_success:
                  summary: Data Profiler Success
                  value:
                    status: "success"
                    agent: "profiler"
                    result:
                      status: "success"
                      basic_info:
                        total_rows: 5
                        total_columns: 4
                        memory_usage_mb: 0.001
                      data_quality:
                        overall_score: 100
                        factors:
                          - factor: "completeness"
                            score: 30
                            description: "Percentage of non-missing values"
                      column_analysis:
                        name:
                          data_type: "object"
                          null_percentage: 0
                          unique_count: 5
                langextract_success:
                  summary: Language Extractor Success
                  value:
                    status: "success"
                    agent: "langextract"
                    result:
                      status: "success"
                      text_columns: ["description", "review"]
                      language_summary:
                        primary_language: "spanish"
                        confidence: 0.43
                        language_distribution:
                          spanish: 0.43
                          english: 0.23
                          italian: 0.20
                      cultural_context:
                        food_terms: 2
                        tradition_terms: 1
                        language_terms: 1
        '400':
          description: Bad request - invalid filename or agent type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: File not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Agent execution failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Agent execution failed"
                  details:
                    type: string
                    example: "Python module not found"

  /api/agents/status/{jobId}:
    get:
      tags:
        - AI Agents
      summary: Get Agent Processing Status
      description: Check the status of a long-running agent job (placeholder for future implementation)
      parameters:
        - name: jobId
          in: path
          required: true
          description: The job ID to check status for
          schema:
            type: string
            example: "job-123456789"
      responses:
        '200':
          description: Job status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Job tracking not implemented yet"
                  jobId:
                    type: string
                    example: "job-123456789"

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid file type"
        details:
          type: string
          description: Additional error details
          example: "Only CSV, JSON, TXT, and XLSX files are allowed"
      required:
        - error

  examples:
    SampleCSVData:
      summary: Sample CSV data for testing
      value: |
        name,age,country,language
        Alice,25,USA,English
        Bob,30,France,French
        Charlie,28,Germany,German
        Diana,26,Spain,Spanish
        Eva,29,Italy,Italian
    
    MultilingualCSVData:
      summary: Multilingual CSV for language extraction
      value: |
        name,description,review,category
        Alice Johnson,"A passionate teacher from New York","This platform is amazing for cultural exploration!",education
        Maria García,"Antropóloga cultural española","Excelente plataforma para explorar culturas.",research
        Hans Mueller,"Deutscher Historiker","Diese Anwendung ist wunderbar für kulturelle Forschung.",academic
        Elena Rossi,"Blogger italiana di cucina","Questa piattaforma è fantastica per tradizioni culinarie!",food
